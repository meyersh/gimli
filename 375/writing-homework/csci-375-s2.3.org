#+OPTIONS: num:nil toc:1 tasks:t todo:nil
#+STARTUP: nologdone
#+LaTeX_HEADER: \usepackage{tikz}
#+LaTeX_HEADER: \usetikzlibrary{arrows,automata}


CSCI 375: S2.3

Study sections 2.5 and 2.6 of the textbook.  Then do the following
exercises from the end of the chapter.  Bring a printed copy to class.

* 2.18
Let $n$ be a positive integer and $L = \{x \in \{a, b\}^* : |x| = n$
and $n_a(x) = n_b(x)\}$. What is the minimum number of states in any FA
that accepts $L$? Give reasons for your answer.

- Any FA accepting $L$ will require $(\frac{n}{2} + 1)^2 + 1$ states

Consider the first few required number of states:
| n | Required states | Observation |
| 0 | 1               | $1^1$       |
| 2 | 4 states + 1    | $2^2 + 1$   |
| 4 | 9 states + 1    | $3^2 + 1$   |
| 6 | 16 states + 1   | $4^2 + 1$   |

Notice that n/2+1 = the base that we are raising to the power of two
(in the Observation column).

We only need to check to see if we have $n/2$ a's or b's, more than
that is an immediate disqualification.) To check that many a's and b's
is the number (to be checked) raised to the power of two. 

Lastly we need a pergatory state.

* 2.43
Let $L = \{ww | w \in \{a, b\}^*\}$. Describe all the equivalence
classes of $I_L$.

$I_L$ is defined as follows:

For $x,y \in \Sigma^*$,

$xI_Ly$ if and only if $x$ and $y$ are $L$-distinguishable.

- Two nonnull elements of $L$ are $L$-indistinguishable, because if a
  string other than $\lambda$ is appended to the end of either one,
  the result is not in $L$; and every nonnull string in $L$ can be
  distringuished from every string not in $L$ by the string
  $\lambda$. Therefore, the set $L-\{\lambda\}$ is an equivalence
  class if $I_L$.
- The set of non-prefixes of elements of $L$ is another equivalence
  class: No two nonprefixes can be distringuished relative to $L$, and
  if $xy \in L$, then the string $y$ distinguishes $x$ from every
  nonprefix.
- The set of strings in $L$ are an equivalence class.

\emph{Summary:} The set, $L$, and the non-prefixes of $L$ are infinite
sets.

* 2.55
For each of the FAs pictured in Fig. 2.45, use the minimization
algorithm described in Section 2.6 to find a minimum-state FA
recognizing the same language. (It's possible that the given FA may
already be minimal.)

** A.

** Minimized machine

#+BEGIN_LaTeX
\begin{tikzpicture}[>=stealth',shorten >=1pt,auto,node distance=2cm]
\node [initial, state] (q1) {1,3};
\node [state] (q2) [right of=q1] {2,4};
\node [state,accepting] (q3) [right of=q2] {5};

\path[->] (q1) edge [loop above] node {b} (q1)
          (q1) edge [bend left]  node {a} (q2)
          (q2) edge [bend left]  node {b} (q3)
          (q2) edge              node {a} (q1)
          (q3) edge              node {a} (q2)
          (q3) edge [loop above] node {b} (q3);
\end{tikzpicture}
#+END_LaTeX

** Passes:
| P |   |   |   |   |
| 2 | 2 |   |   |   |
| 3 |   | 2 |   |   |
| 4 | 2 |   | 2 |   |
| 5 | 1 | 1 | 1 | 1 |
| Q | 1 | 2 | 3 | 4 |

** B. The finite automata is already reduced.


