#+OPTIONS: num:nil toc:1 tasks:t todo:nil
#+STARTUP: nologdone
#+LaTeX_HEADER: \usepackage{tikz}
#+LaTeX_HEADER: \usetikzlibrary{arrows,automata}

CSCI 375: S3.3 

Read sections 3.4-3.5 of the textbook.  Then do the following
exercises from the end of the chapter.  Bring a printed copy to class.

* 3.37a, c
In each part of Figure 3.36 is pictured an NFA. Use the algorithm
described in the proof of Therem 3.17 to draw an NFA with no
$\Lambda$-transitions accepting the same language.

- A (transition table) (4 is accepting)
  | Q     | a           | b           |
  | {1}   | $\emptyset$ | {2,5}       |
  | {2,5} | {3,4}       | {1}         |
  | {3,4} | $\emptyset$ | {1,5}       |
  | {1,5} | {4}         | {2}         |
  | {2}   | {3}         | $\emptyset$ |
  | {4}   | $\emptyset$ | {4}         |
  | {3}   | $\emptyset$ | {1}         |
  | {5}   | {4}         | $\emptyset$ |

#+BEGIN_LaTeX
\begin{tikzpicture}[>=stealth',shorten >=1pt,auto,node distance=2cm]
\node [initial, state] (q1) {1};
\node [state] (q2) [below right of=q1] {2,5};
\node [state, accepting] (q3) [below right of=q2] {3,4};
\node [state] (q4) [above right of=q3] {1,5};
\node [state] (q5) [above left of=q4] {2};
\node [state,accepting] (q6) [right of=q4] {4};
\node [state] (q7) [above right of=q1] {3};
\node [state] (q8) [above of=q6] {5};

\path[->] (q1) edge              node {b} (q2)
          (q2) edge              node {a} (q3)
          (q2) edge              node {b} (q1)
          (q3) edge              node {b} (q4)
          (q4) edge              node {a} (q6)
          (q4) edge              node {b} (q5)
          (q5) edge              node {a} (q7)
          (q6) edge [bend right] node {b} (q8)
          (q7) edge              node {b} (q1)
          (q8) edge [bend right] node {a} (q6);
  

\end{tikzpicture}
#+END_LaTeX

- C (transition table) (2 is accepting)
  | Q       | a       | b           |
  | {1}     | {2,3}   | $\emptyset$ |
  | {2,3}   | {1}     | {4}         |
  | {4}     | {1,4}   | $\emptyset$ |
  | {1,4}   | {2,3,4} | $\emptyset$ |
  | {2,3,4} | {1,4}   | {4}         |

#+BEGIN_LaTeX
\begin{tikzpicture}[>=stealth',shorten >=1pt,auto,node distance=2cm]
\node [initial, state] (q1) {1};
\node [state, accepting] (q2) [above right of=q1] {2,3};
\node [state] (q3) [below right of=q1] {4};
\node [state] (q4) [right of=q3] {1,4};
\node [state,accepting] (q5) [right of=q2] {2,3,4};

\path[->] (q1) edge [bend right] node {a} (q2)
          (q2) edge              node {a} (q1)
          (q2) edge              node {b} (q3)
          (q3) edge              node {a} (q4)
          (q4) edge [bend right] node {a} (q5)
          (q5) edge [bend right] node {a} (q4)
          (q5) edge              node {b} (q3);

\end{tikzpicture}
#+END_LaTeX

* 3.39
Suppose $L \subseteq \Sigma^*$ is a regular language. If Every FA
accepting $L$ has at least $n$ states, then every NFA accepting $L$
has at least \_\_\_ states. (Fill in the blank, and explain your
answer.)

- Per 3.18, An NFA accepting $Q$ states will transform into an FA
  having $2^Q$ states.

  A little algebra from this defintion follows:

  $Q_1 = n = 2^Q$

  $log_2(Q_1) = Q$

  Therefore, an NFA accepting the same language as an $n$-state FA
  will require $log_2(n)$ states.

* 3.41a

For the following regular expression, draw an NFA accepting the
corresponding language, so that there is a recognizable correspondence
between the regular expression and the transition diagram.

- a. $(b + bba)^*a$

#+BEGIN_LaTeX
\begin{tikzpicture}[>=stealth',shorten >=1pt,auto,node distance=2cm]
\node [initial, state] (q0) {q0};
\node [state] (q1) [above right of=q0] {q1};
\node [state, accepting] (q2) [below right of=q1] {q2};
\node [state] (q3) [below right of=q0] {q3};
\node [state] (q4) [right of=q3] {q4};
\node [state] (q5) [right of=q4] {q5};
\node [state] (q6) [right of=q5] {q6};

\path[->] (q0) edge              node {$\Lambda$} (q1)
               edge              node {$\Lambda$} (q3)
          (q1) edge [loop above] node {b} (q1)
               edge              node {a} (q2)
          (q3) edge              node {a} (q2)
               edge              node {b} (q4)
          (q4) edge              node {b} (q5)
          (q5) edge              node {a} (q6)
          (q6) edge [bend left]  node {$\Lambda$} (q3);
\end{tikzpicture}
#+END_LaTeX
